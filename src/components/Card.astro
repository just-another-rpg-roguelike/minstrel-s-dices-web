---
interface Props {
  body: string;
  isPlayButton?: boolean;
}

const { body, isPlayButton = false } = Astro.props;
---

<li class="link-card">
  <button class=`btn-menu ${isPlayButton?"btn-play":""}`>
    <h2>
      <span> </span>
    </h2>
    <p>
      {body}
    </p>
  </button>
</li>
<script>
  import Typewriter from "typewriter-effect/dist/core";

  document.addEventListener("DOMContentLoaded", function () {
    const lines = document.querySelectorAll(".line");

    const animateLines = () => {
      lines.forEach((line: HTMLElement, index) => {
        setTimeout(() => {
          line.style.width = "100%";
          line.style.transition = "width 2s";
        }, index * 500); // Start each line's animation with a slight delay
      });

      // Hide .main-menu element.
      setTimeout(() => {
        (document.querySelector(".main-menu") as HTMLElement).style.display =
          "none";
        (
          document.querySelector(".game-container") as HTMLElement
        ).style.display = "flex";
      }, 4000);

      lines.forEach((line: HTMLElement, index) => {
        setTimeout(
          () => {
            line.style.width = "0";
            line.style.left = "100%";
            line.style.transition = "width 2s, left 2s";
          },
          4000 + index * 500
        );
      });

      setTimeout(() => {
        new Typewriter("#typewriter", {
          strings: (document.querySelector("#typewriter") as HTMLElement)
            .dataset.text,
          autoStart: true,
          loop: false,
          delay: 50,
        });
      }, 4300);
    };
    document.querySelectorAll(".btn-play").forEach((btn) => {
      btn.addEventListener("click", () => {
        animateLines();
      });
    });
  });
</script>
<style>
  .link-card {
    list-style: none;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    text-align: center;
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    text-align: center;
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
